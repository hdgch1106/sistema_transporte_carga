/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pe.unjfsc.fsi.java8.view;

import java.sql.ResultSet;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import pe.unjfsc.fsi.java8.entity.CERegistro;
import pe.unjfsc.fsi.java8.entity.CERegistroAsig;
import pe.unjfsc.fsi.java8.logical.impl.CMCliente;
import pe.unjfsc.fsi.java8.logical.impl.CMRegistro;
import pe.unjfsc.fsi.java8.logical.impl.CMRegistroAsig;

/**
 *
 * @author MIRKO
 */
public class JInternalEnvio extends javax.swing.JInternalFrame {


    ResultSet rsCliente;
    CMCliente objCMCliente = new CMCliente();
    CMRegistro objCMRegistro = new CMRegistro();
    CMRegistroAsig objCMRegistroAsig = new CMRegistroAsig();
    boolean Grabar;
    boolean sw;
    String[] departamento = {"SELECCIONE", "AMAZONAS", "ANCASH", "APURIMAC", "AREQUIPA", "AYACUCHO", "CAJAMARCA",
        "CALLAO", "CUSCO", "HUANCAVELICA", "HUANUCO", "ICA", "JUNIN", "LA LIBERTAD", "LAMBAYEQUE", "LIMA", "LORETO",
        "MADRE DE DIOS", "MOQUEGUA", "PASCO", "PIURA", "PUNO", "SAN MARTIN", "TACNA", "TUMBES", "UCAYALI"};
    String[] amazonas = {"SELECCIONE","BAGUA", "BONGARA", "CHACHAPOYAS", "CONDORCANQUI","LUYA","RODRIGUEZ DE MENDOZA","UTCUBAMBA"};
    String[] ancash = {"SELECCIONE","AIJA", "ANTONIO RAIMONDI", "ASUNCION", "BOLOGNESI", "CARHUAZ", "CARLOS FERMIN", "CASMA",
        "CORONGO", "HUARAZ", "HUARI", "HUARMEY", "HUAYLAS", "MARISCAL LUZURIAGA", "OCROS", "PALLASCA", "POMABAMBA",
        "RECUAY", "SANTA", "SIHUAS", "YUNGAY"};
    String[] apurimac = {"SELECCIONE","ABANCAY", "ANDAHUAYLAS", "ANTABAMBA", "AYMARAES", "CHINCHEROS", "COTABAMBAS", "GRAU"};
    String[] arequipa = {"SELECCIONE","AREQUIPA", "CAMANA", "CARAVELI", "CASTILLA", "CAYLLOMA", "CONDESUYOS", "ISLAY", "LA UNION"};
    String[] ayacucho = {"HUAMANGA","CANGALLO","HUANCA SANCOS","HUANTA","LA MAR","LUCANAS","PARINACOCHAS","PAUCAR DEL SARA SARA","SUCRE","VICTOR FAJARDO","VILCASHUAMAN"};
    String[] cajamarca = {"CAJAMARCA","CAJABAMBA","CELEDIN","CHOTA","CONTUMAZA","CUTERVO","HUALGAYOC","JAEN","SAN IGNACIO","SAN MARCOS","SAN MIGUEL","SAN PABLO","SANTA CRUZ"};
    String[] callao = {"PROV. CONST. DEL CALLAO"};
    String[] cusco = {"CUZCO","ACOMAYO","ANTA","CALCA","CANAS","CANCHIS","CHUMBIVILCAS","ESPINAR","LA CONVECION","PARURO","PAUCARTAMBO","QUISPICANCHI","URUBAMBA"};
    String[] huancavelica = {"HUANCAVELICA","ACOBAMBA","ANGARAES","CASTROVIRREYNA","CHURCAMPA","HUAYTARA","TAYACAJA"};
    String[] huanuco = {"HUANUCO","AMBO","DOS DE MAYO","HUACAYBAMBA","HUAMALIES","LEONCIO PRADO","MARAÑON","PACHITEA","PUERTO INCA","LAURICOCHA","YAROWILCA"};
    String[] ica = {"ICA","CHINCHA","NAZCA","PALPA","PISCO"};
    String[] junin = {"HUANCAYO","CHANCHAMAYO","CHUPACA","CONCEPCION","JAUJA","JUNIN","SATIPO","TARMA","YAULI"};
    String[] laLibertad = {"TRUJILLO","ASCOPE","BOLIVAR","CHEPEN","GRAN CHIMU","JULCAN","OTUZCO","PACASMAYO","PATAZ","SANCHEZ CARRION","SANTIAGO DE CHUCO","VIRU"};
    String[] lambayeque = {"CHICLAYO","FERREÑAFE","LAMBAYEQUE"};
    String[] lima = {"LIMA","BARRANCA","CAJATAMBO","CANTA","CAÑETE","HUARAL","HUAROCHIRI","HUAURA","OYON","YAUYOS"};
    String[] loreto = {"MAYNAS","ALTO AMAZONAS","DATEM DEL MARAÑON","LORETO","MARISCAL RAMON CASTILLA","PUTUMAYO","REQUENA","UCAYALI"};
    String[] madreDeDios = {"TAMBOPATA","MANU","TAHUAMANU"};
    String[] moquegua = {"MARISCAL NIETO","GENERAL SANCHEZ CERRO","ILO"};
    String[] pasco = {"PASCO","DANIEL ALCIDES CARRION","OXAPAMPA"};
    String[] piura = {"PIURA","AYABACA","HUANCABAMBA","MORROPON","PAITA","SECHURA","SULLANA","TALARA"};
    String[] puno = {"Puno","AZANGARO","CARABAYA","CHUCUITO","EL COLLAO","HUANCANE","LAMPA","MELGAR","MOHO","SAN ANTONIO DE PUTINA","SAN ROMAN","SANDIA","YUNGUYO"};
    String[] sanMartin = {"MOYOBAMBA","BELLAVISTA","EL DORADO","HUALLAGA","LAMAS","MARISCAL CACERES","PICOTA","RIOJA","SAN MARTIN","TOCACHE"};
    String[] tacna = {"TACNA","CANDARAVE","JORGE BASADRE","TARATA"};
    String[] tumbes = {"TUMBES","CONTRALMIRANTE VILLAR","ZARUMILLA"};
    String[] ucayali = {"CORONEL PORTILLO","ATALAYA","PADRE ABAD","PURUS"};
    
    public JInternalEnvio() {
        initComponents();
        setVisible(true);
        setSize(935, 685);
        setLocation(210, 0);
        llenaComboDepartamento();
        llenaComboDepartamento1();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbtnnuevo = new javax.swing.JButton();
        jbtnEnviar = new javax.swing.JButton();
        jbtnCancelar = new javax.swing.JButton();
        jbtnAgregarClie = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jtxtApellidoPCliente = new javax.swing.JTextField();
        jtxtCelularCliente = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jtxtDniCliente = new javax.swing.JTextField();
        jtxtApellidoMCliente = new javax.swing.JTextField();
        jbtnConsultar = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jtxtidCliente = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jtxtNombreCliente = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jbtnBuscarClie = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jspnPaquetes = new javax.swing.JSpinner();
        jspnPeso1 = new javax.swing.JSpinner();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtxtDescripcion = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        jcmbDepartamento = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jcmbProvincia = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jtxtDistrito = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jtxtDireccion = new javax.swing.JTextField();
        jcmbDepartamento1 = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jcmbProvincia1 = new javax.swing.JComboBox<>();
        jtxtDistrito2 = new javax.swing.JTextField();
        jtxtDireccion1 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jbtnSalir = new javax.swing.JButton();

        getContentPane().setLayout(null);

        jbtnnuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/registroNuevo.png"))); // NOI18N
        jbtnnuevo.setText("NUEVO");
        jbtnnuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnnuevoActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnnuevo);
        jbtnnuevo.setBounds(170, 580, 110, 50);

        jbtnEnviar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/guardar.png"))); // NOI18N
        jbtnEnviar.setText("GUARDAR");
        jbtnEnviar.setEnabled(false);
        jbtnEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnEnviarActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnEnviar);
        jbtnEnviar.setBounds(500, 580, 124, 50);

        jbtnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cancelarRegistro.png"))); // NOI18N
        jbtnCancelar.setText("CANCELAR");
        jbtnCancelar.setEnabled(false);
        jbtnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCancelarActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnCancelar);
        jbtnCancelar.setBounds(330, 580, 130, 50);

        jbtnAgregarClie.setIcon(new javax.swing.ImageIcon(getClass().getResource("/persona.png"))); // NOI18N
        jbtnAgregarClie.setText("AGREGAR");
        jbtnAgregarClie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnAgregarClieActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnAgregarClie);
        jbtnAgregarClie.setBounds(770, 10, 130, 40);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel14.setText("APELLIDO P:");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 60, -1, -1));

        jLabel15.setText("CELULAR:");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 60, -1, -1));

        jtxtApellidoPCliente.setEditable(false);
        jtxtApellidoPCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtApellidoPClienteActionPerformed(evt);
            }
        });
        jtxtApellidoPCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtApellidoPClienteKeyTyped(evt);
            }
        });
        jPanel1.add(jtxtApellidoPCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 50, 180, 30));

        jtxtCelularCliente.setEditable(false);
        jtxtCelularCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtCelularClienteActionPerformed(evt);
            }
        });
        jtxtCelularCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtCelularClienteKeyTyped(evt);
            }
        });
        jPanel1.add(jtxtCelularCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 50, 180, 30));

        jLabel17.setText("DNI:");
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 60, -1, -1));

        jtxtDniCliente.setEditable(false);
        jtxtDniCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtxtDniClienteKeyReleased(evt);
            }
        });
        jPanel1.add(jtxtDniCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 50, 110, 30));

        jtxtApellidoMCliente.setEditable(false);
        jtxtApellidoMCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtApellidoMClienteActionPerformed(evt);
            }
        });
        jPanel1.add(jtxtApellidoMCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 10, 180, 30));

        jbtnConsultar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/acercaDe.png"))); // NOI18N
        jbtnConsultar.setText("CONSULTAR");
        jbtnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnConsultarActionPerformed(evt);
            }
        });
        jPanel1.add(jbtnConsultar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 140, 50));

        jLabel13.setText("ID:");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, -1, -1));

        jtxtidCliente.setEditable(false);
        jtxtidCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtidClienteActionPerformed(evt);
            }
        });
        jtxtidCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtidClienteKeyTyped(evt);
            }
        });
        jPanel1.add(jtxtidCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 10, 90, 30));

        jLabel16.setText("NOMBRE:");
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 20, -1, -1));

        jtxtNombreCliente.setEditable(false);
        jtxtNombreCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtNombreClienteActionPerformed(evt);
            }
        });
        jtxtNombreCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtNombreClienteKeyTyped(evt);
            }
        });
        jPanel1.add(jtxtNombreCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 10, 150, 30));

        jLabel19.setText("APELLIDO M:");
        jPanel1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 20, -1, -1));

        getContentPane().add(jPanel1);
        jPanel1.setBounds(20, 60, 880, 100);

        jbtnBuscarClie.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buscarCliente.png"))); // NOI18N
        jbtnBuscarClie.setText("BUSCAR");
        jbtnBuscarClie.setEnabled(false);
        jbtnBuscarClie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBuscarClieActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnBuscarClie);
        jbtnBuscarClie.setBounds(170, 10, 110, 40);

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel6.setText("AGREGAR CLIENTE:");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(610, 30, 150, 19);

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel20.setText("DESCRIPCIÓN:");
        jPanel2.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 40, 90, -1));

        jLabel22.setText("NÚMERO DE PAQUETES:");
        jPanel2.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, -1, -1));

        jLabel23.setText("PESO TOTAL:");
        jPanel2.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 100, -1));

        jspnPaquetes.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        jspnPaquetes.setEnabled(false);
        jPanel2.add(jspnPaquetes, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 50, 90, 30));

        jspnPeso1.setModel(new javax.swing.SpinnerNumberModel(0.0d, 0.0d, null, 1.0d));
        jspnPeso1.setEnabled(false);
        jPanel2.add(jspnPeso1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, 90, 30));

        jtxtDescripcion.setEditable(false);
        jtxtDescripcion.setColumns(20);
        jtxtDescripcion.setRows(5);
        jScrollPane2.setViewportView(jtxtDescripcion);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 10, 310, 70));

        getContentPane().add(jPanel2);
        jPanel2.setBounds(20, 200, 880, 100);

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel7.setText("GUIA DE ENVÍO:");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(30, 170, 150, 19);

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel28.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(102, 102, 102));
        jLabel28.setText("DIRECCIÓN DE PARTIDA:");
        jPanel3.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 150, -1));

        jcmbDepartamento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcmbDepartamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcmbDepartamentoActionPerformed(evt);
            }
        });
        jPanel3.add(jcmbDepartamento, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 120, -1));

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel5.setText("DISTRITO:");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 50, 90, -1));

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel9.setText("DEPARTAMENTO:");
        jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 130, -1));

        jcmbProvincia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONE" }));
        jcmbProvincia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcmbProvinciaActionPerformed(evt);
            }
        });
        jPanel3.add(jcmbProvincia, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 80, 120, -1));

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel10.setText("PROVINCIA:");
        jPanel3.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 50, 90, -1));

        jtxtDistrito.setEditable(false);
        jPanel3.add(jtxtDistrito, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 80, 100, -1));

        jLabel11.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel11.setText("DIRECCION:");
        jPanel3.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 50, 90, -1));

        jtxtDireccion.setEditable(false);
        jPanel3.add(jtxtDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 80, 400, -1));

        jcmbDepartamento1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcmbDepartamento1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcmbDepartamento1ActionPerformed(evt);
            }
        });
        jPanel3.add(jcmbDepartamento1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 120, -1));

        jLabel12.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel12.setText("DEPARTAMENTO:");
        jPanel3.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 130, -1));

        jLabel29.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(102, 102, 102));
        jLabel29.setText("DIRECCIÓN DE LLEGADA:");
        jPanel3.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 150, -1));

        jcmbProvincia1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONE" }));
        jcmbProvincia1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcmbProvincia1ActionPerformed(evt);
            }
        });
        jPanel3.add(jcmbProvincia1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 180, 120, -1));

        jtxtDistrito2.setEditable(false);
        jPanel3.add(jtxtDistrito2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 180, 100, -1));

        jtxtDireccion1.setEditable(false);
        jPanel3.add(jtxtDireccion1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 180, 400, -1));

        jLabel21.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel21.setText("DIRECCION:");
        jPanel3.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 150, 90, -1));

        jLabel24.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel24.setText("DISTRITO:");
        jPanel3.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 150, 90, -1));

        jLabel25.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel25.setText("PROVINCIA:");
        jPanel3.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 150, 90, -1));

        getContentPane().add(jPanel3);
        jPanel3.setBounds(20, 340, 880, 220);

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel8.setText("DATOS DE ENVÍO:");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(30, 310, 150, 19);

        jLabel26.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel26.setText("BUSCAR CLIENTE:");
        getContentPane().add(jLabel26);
        jLabel26.setBounds(30, 30, 130, 19);

        jbtnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/salir.png"))); // NOI18N
        jbtnSalir.setText("SALIR");
        jbtnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSalirActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnSalir);
        jbtnSalir.setBounds(660, 580, 120, 50);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnEnviarActionPerformed

        try {
            int xidRegistro;
            CERegistro objCERegistro = new CERegistro();
            CERegistroAsig objCERegistroAsig = new CERegistroAsig();
            
            objCERegistro.setIdCliente(Integer.parseInt(jtxtidCliente.getText()));
            objCERegistro.setDniCliente(Integer.parseInt(jtxtDniCliente.getText()));
            objCERegistro.setNombCliente(jtxtNombreCliente.getText());
            objCERegistro.setAppaCliente(jtxtApellidoPCliente.getText());
            objCERegistro.setApmaCliente(jtxtApellidoMCliente.getText());
            objCERegistro.setCelCliente(Integer.parseInt(jtxtCelularCliente.getText()));
            objCERegistro.setPeso((double) jspnPeso1.getValue());
            objCERegistro.setNumeroPaquetes((int) jspnPaquetes.getValue());
            objCERegistro.setDescripcion(jtxtDescripcion.getText());
            objCERegistro.setDptoPartida(jcmbDepartamento.getSelectedItem().toString());
            objCERegistro.setProvinciaPartida(jcmbProvincia.getSelectedItem().toString());
            objCERegistro.setDistritoPartida(jtxtDistrito.getText());
            objCERegistro.setDireccionPartida(jtxtDireccion.getText());
            objCERegistro.setDptoLlegada(jcmbDepartamento1.getSelectedItem().toString());
            objCERegistro.setProvinciaLlegada(jcmbProvincia1.getSelectedItem().toString());
            objCERegistro.setDistritoLlegada(jtxtDistrito2.getText());
            objCERegistro.setDireccionLlegada(jtxtDireccion1.getText());
            objCMRegistro.insert(objCERegistro);
            xidRegistro = objCMRegistroAsig.obtenerIdRegistro();
            objCERegistroAsig.setIdRegistro(xidRegistro);
            objCMRegistroAsig.insert(objCERegistroAsig);
            JOptionPane.showMessageDialog(this, "REGISTRO GRABADO");
            limpiarControles();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e);

        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jbtnEnviarActionPerformed

    private void jbtnnuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnnuevoActionPerformed
        habilitaControles(true);
        limpiarControles();
        sw = true;
        llenaComboDepartamento();
        llenaComboDepartamento1();
    }//GEN-LAST:event_jbtnnuevoActionPerformed

    private void jbtnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCancelarActionPerformed
        habilitaControles(false);
        limpiarControles();    }//GEN-LAST:event_jbtnCancelarActionPerformed

    private void jtxtidClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtidClienteActionPerformed

    }//GEN-LAST:event_jtxtidClienteActionPerformed

    private void jtxtidClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtidClienteKeyTyped
        //        char validar = evt.getKeyChar();
        //        //SI EL CARACTER ES UN DIGITO ENTONCES SALDRA EL AVISO
        //        if (Character.isLetter(validar)) {
        //            //EMITE UN MENSAJE NATIVO
        //            getToolkit().beep();
        //            evt.consume();
        //            JOptionPane.showMessageDialog(rootPane, "INGRESAR CORRECTAMENTE");
        //        }
    }//GEN-LAST:event_jtxtidClienteKeyTyped

    private void jtxtApellidoPClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtApellidoPClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtApellidoPClienteActionPerformed

    private void jtxtApellidoPClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtApellidoPClienteKeyTyped

    }//GEN-LAST:event_jtxtApellidoPClienteKeyTyped

    private void jtxtCelularClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtCelularClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtCelularClienteActionPerformed

    private void jtxtCelularClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtCelularClienteKeyTyped
        char validar = evt.getKeyChar();
        //SI EL CARACTER ES UN CARACTER DE TIPO STRING ENTONCES SALDRA EL AVISO
        if (Character.isLetter(validar)) {
            //EMITE UN MENSAJE NATIVO
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "INGRESAR CORRECTAMENTE");
        }
    }//GEN-LAST:event_jtxtCelularClienteKeyTyped

    private void jtxtNombreClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtNombreClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtNombreClienteActionPerformed

    private void jtxtNombreClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtNombreClienteKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtNombreClienteKeyTyped

    private void jtxtDniClienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtDniClienteKeyReleased

    }//GEN-LAST:event_jtxtDniClienteKeyReleased

    private void jbtnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnConsultarActionPerformed
        boolean band = true;

        try {

            if (!jtxtDniCliente.getText().isEmpty()) {
                rsCliente = objCMCliente.buscarxdni(jtxtDniCliente.getText().trim());
                while (rsCliente.next()) {
                    jtxtidCliente.setText(rsCliente.getString(1));
                    jtxtNombreCliente.setText(rsCliente.getString(3));
                    jtxtApellidoPCliente.setText(rsCliente.getString(4));
                    jtxtApellidoMCliente.setText(rsCliente.getString(5));
                    jtxtCelularCliente.setText(rsCliente.getString(9));
                }
            } else {
                JOptionPane.showMessageDialog(null, "CLIENTE NO HA SIDO ENCONTRADO");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jbtnConsultarActionPerformed

    private void jtxtApellidoMClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtApellidoMClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtApellidoMClienteActionPerformed

    private void jbtnBuscarClieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBuscarClieActionPerformed
        Menu.desktopPane.add(new JInternalBuscarCliente());
    }//GEN-LAST:event_jbtnBuscarClieActionPerformed

    private void jcmbDepartamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcmbDepartamentoActionPerformed
        int dpt = 1;
        if (jcmbDepartamento.getSelectedIndex() == 0) {
            jcmbProvincia.setEnabled(false);
        } else if (jcmbDepartamento.getSelectedIndex() == 1) {
            llenaComboAmazonas(dpt);
            jcmbProvincia.setEnabled(true);
        } else if (jcmbDepartamento.getSelectedIndex() == 2) {
            llenaComboAncash(dpt);
            jcmbProvincia.setEnabled(true);
        } else if (jcmbDepartamento.getSelectedIndex() == 3) {
            llenaComboApurimac(dpt);
            jcmbProvincia.setEnabled(true);
        } else if (jcmbDepartamento.getSelectedIndex() == 4) {
            llenaComboArequipa(dpt);
            jcmbProvincia.setEnabled(true);
        } else if (jcmbDepartamento.getSelectedIndex() == 5) {
            llenaComboAyacucho(dpt);
            jcmbProvincia.setEnabled(true);
        } else if (jcmbDepartamento.getSelectedIndex() == 6) {
            llenaComboCajamarca(dpt);
            jcmbProvincia.setEnabled(true);
        } else if (jcmbDepartamento.getSelectedIndex() == 7) {
            llenaComboCallao(dpt);
            jcmbProvincia.setEnabled(true);
        } else if (jcmbDepartamento.getSelectedIndex() == 8) {
            llenaComboCusco(dpt);
            jcmbProvincia.setEnabled(true);
        }else if (jcmbDepartamento.getSelectedIndex() == 9) {
            llenaComboHuancavelica(dpt);
            jcmbProvincia.setEnabled(true);
        }else if (jcmbDepartamento.getSelectedIndex() == 10) {
            llenaComboHuanuco(dpt);
            jcmbProvincia.setEnabled(true);
        }else if (jcmbDepartamento.getSelectedIndex() == 11) {
            llenaComboIca(dpt);
            jcmbProvincia.setEnabled(true);
        }else if (jcmbDepartamento.getSelectedIndex() == 12) {
            llenaComboJunin(dpt);
            jcmbProvincia.setEnabled(true);
        }else if (jcmbDepartamento.getSelectedIndex() == 13) {
            llenaComboLaLibertad(dpt);
            jcmbProvincia.setEnabled(true);
        }else if (jcmbDepartamento.getSelectedIndex() == 14) {
            llenaComboLambayeque(dpt);
            jcmbProvincia.setEnabled(true);
        }else if (jcmbDepartamento.getSelectedIndex() == 15) {
            llenaComboLima(dpt);
            jcmbProvincia.setEnabled(true);
        }else if (jcmbDepartamento.getSelectedIndex() == 16) {
            llenaComboLoreto(dpt);
            jcmbProvincia.setEnabled(true);
        }else if (jcmbDepartamento.getSelectedIndex() == 17) {
            llenaComboMadreDeDios(dpt);
            jcmbProvincia.setEnabled(true);
        }else if (jcmbDepartamento.getSelectedIndex() == 18) {
            llenaComboMoquegua(dpt);
            jcmbProvincia.setEnabled(true);
        }else if (jcmbDepartamento.getSelectedIndex() == 19) {
            llenaComboPasco(dpt);
            jcmbProvincia.setEnabled(true);
        }else if (jcmbDepartamento.getSelectedIndex() == 20) {
            llenaComboPiura(dpt);
            jcmbProvincia.setEnabled(true);
        }else if (jcmbDepartamento.getSelectedIndex() == 21) {
            llenaComboPuno(dpt);
            jcmbProvincia.setEnabled(true);
        }else if (jcmbDepartamento.getSelectedIndex() == 22) {
            llenaComboSanMartin(dpt);
            jcmbProvincia.setEnabled(true);
        }else if (jcmbDepartamento.getSelectedIndex() == 23) {
            llenaComboTacna(dpt);
            jcmbProvincia.setEnabled(true);
        }else if (jcmbDepartamento.getSelectedIndex() == 24) {
            llenaComboTumbes(dpt);
            jcmbProvincia.setEnabled(true);
        }else if (jcmbDepartamento.getSelectedIndex() == 25) {
            llenaComboUcayali(dpt);
            jcmbProvincia.setEnabled(true);
        }
    }//GEN-LAST:event_jcmbDepartamentoActionPerformed

    private void jcmbProvinciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcmbProvinciaActionPerformed
    }//GEN-LAST:event_jcmbProvinciaActionPerformed

    private void jcmbDepartamento1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcmbDepartamento1ActionPerformed
        int dpt = 2;
        if (jcmbDepartamento1.getSelectedIndex() == 0) {
            jcmbProvincia1.setEnabled(false);
        } else if (jcmbDepartamento1.getSelectedIndex() == 1) {
            llenaComboAmazonas(dpt);
            jcmbProvincia1.setEnabled(true);
        } else if (jcmbDepartamento1.getSelectedIndex() == 2) {
            llenaComboAncash(dpt);
            jcmbProvincia1.setEnabled(true);
        } else if (jcmbDepartamento1.getSelectedIndex() == 3) {
            llenaComboApurimac(dpt);
            jcmbProvincia1.setEnabled(true);
        } else if (jcmbDepartamento1.getSelectedIndex() == 4) {
            llenaComboArequipa(dpt);
            jcmbProvincia1.setEnabled(true);
        } else if (jcmbDepartamento1.getSelectedIndex() == 5) {
            llenaComboAyacucho(dpt);
            jcmbProvincia1.setEnabled(true);
        } else if (jcmbDepartamento1.getSelectedIndex() == 6) {
            llenaComboCajamarca(dpt);
            jcmbProvincia1.setEnabled(true);
        } else if (jcmbDepartamento1.getSelectedIndex() == 7) {
            llenaComboCallao(dpt);
            jcmbProvincia1.setEnabled(true);
        } else if (jcmbDepartamento1.getSelectedIndex() == 8) {
            llenaComboCusco(dpt);
            jcmbProvincia1.setEnabled(true);
        } else if (jcmbDepartamento1.getSelectedIndex() == 9) {
            llenaComboHuancavelica(dpt);
            jcmbProvincia1.setEnabled(true);
        } else if (jcmbDepartamento1.getSelectedIndex() == 10) {
            llenaComboHuanuco(dpt);
            jcmbProvincia1.setEnabled(true);
        } else if (jcmbDepartamento1.getSelectedIndex() == 11) {
            llenaComboIca(dpt);
            jcmbProvincia1.setEnabled(true);
        } else if (jcmbDepartamento1.getSelectedIndex() == 12) {
            llenaComboJunin(dpt);
            jcmbProvincia1.setEnabled(true);
        } else if (jcmbDepartamento1.getSelectedIndex() == 13) {
            llenaComboLaLibertad(dpt);
            jcmbProvincia1.setEnabled(true);
        } else if (jcmbDepartamento1.getSelectedIndex() == 14) {
            llenaComboLambayeque(dpt);
            jcmbProvincia1.setEnabled(true);
        } else if (jcmbDepartamento1.getSelectedIndex() == 15) {
            llenaComboLima(dpt);
            jcmbProvincia1.setEnabled(true);
        } else if (jcmbDepartamento1.getSelectedIndex() == 16) {
            llenaComboLoreto(dpt);
            jcmbProvincia1.setEnabled(true);
        } else if (jcmbDepartamento1.getSelectedIndex() == 17) {
            llenaComboMadreDeDios(dpt);
            jcmbProvincia1.setEnabled(true);
        } else if (jcmbDepartamento1.getSelectedIndex() == 18) {
            llenaComboMoquegua(dpt);
            jcmbProvincia1.setEnabled(true);
        } else if (jcmbDepartamento1.getSelectedIndex() == 19) {
            llenaComboPasco(dpt);
            jcmbProvincia1.setEnabled(true);
        } else if (jcmbDepartamento1.getSelectedIndex() == 20) {
            llenaComboPiura(dpt);
            jcmbProvincia1.setEnabled(true);
        } else if (jcmbDepartamento1.getSelectedIndex() == 21) {
            llenaComboPuno(dpt);
            jcmbProvincia1.setEnabled(true);
        } else if (jcmbDepartamento1.getSelectedIndex() == 22) {
            llenaComboSanMartin(dpt);
            jcmbProvincia1.setEnabled(true);
        } else if (jcmbDepartamento1.getSelectedIndex() == 23) {
            llenaComboTacna(dpt);
            jcmbProvincia1.setEnabled(true);
        } else if (jcmbDepartamento1.getSelectedIndex() == 24) {
            llenaComboTumbes(dpt);
            jcmbProvincia1.setEnabled(true);
        } else if (jcmbDepartamento1.getSelectedIndex() == 24) {
            llenaComboUcayali(dpt);
            jcmbProvincia1.setEnabled(true);
        } 
    }//GEN-LAST:event_jcmbDepartamento1ActionPerformed

    private void jcmbProvincia1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcmbProvincia1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcmbProvincia1ActionPerformed

    private void jbtnAgregarClieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnAgregarClieActionPerformed
        Menu.desktopPane.add(new JInternalCliente());
    }//GEN-LAST:event_jbtnAgregarClieActionPerformed

    private void jbtnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSalirActionPerformed
        dispose();
    }//GEN-LAST:event_jbtnSalirActionPerformed
    private void limpiarControles() {
        JTextField[] arrJTextFields = {jtxtidCliente, jtxtDniCliente, jtxtNombreCliente, jtxtApellidoPCliente, jtxtApellidoMCliente, jtxtCelularCliente,
            jtxtDireccion, jtxtDireccion1, jtxtDistrito, jtxtDistrito2};
        for (JTextField objJTextField : arrJTextFields) {
            objJTextField.setText(null);
        }
        limpiarJTable();
        jtxtDescripcion.setText(null);
        jcmbDepartamento.removeAllItems();
        jcmbDepartamento1.removeAllItems();
        jcmbProvincia.removeAllItems();
        jcmbProvincia1.removeAllItems();
        jtxtDescripcion.setText(null);
    }

    private void habilitaControles(boolean b) {
        jbtnnuevo.setEnabled(!b);
        jbtnCancelar.setEnabled(b);
        jbtnBuscarClie.setEnabled(b);
        jbtnEnviar.setEnabled(b);
        jcmbDepartamento.setEnabled(b);
        jcmbDepartamento1.setEnabled(b);
//        jcmbProvincia.setEnabled(b);
//        jcmbProvincia1.setEnabled(b);
        jtxtDniCliente.setEditable(b);
        jspnPeso1.setEnabled(b);
        jspnPaquetes.setEnabled(b);
        jtxtDescripcion.setEditable(b);
        jtxtDistrito.setEditable(b);
        jtxtDistrito2.setEditable(b);
        jtxtDireccion.setEditable(b);
        jtxtDireccion1.setEditable(b);
        jtxtDniCliente.grabFocus();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbtnAgregarClie;
    private javax.swing.JButton jbtnBuscarClie;
    private javax.swing.JButton jbtnCancelar;
    private javax.swing.JButton jbtnConsultar;
    private javax.swing.JButton jbtnEnviar;
    private javax.swing.JButton jbtnSalir;
    private javax.swing.JButton jbtnnuevo;
    private javax.swing.JComboBox<String> jcmbDepartamento;
    private javax.swing.JComboBox<String> jcmbDepartamento1;
    private javax.swing.JComboBox<String> jcmbProvincia;
    private javax.swing.JComboBox<String> jcmbProvincia1;
    private javax.swing.JSpinner jspnPaquetes;
    private javax.swing.JSpinner jspnPeso1;
    public static javax.swing.JTextField jtxtApellidoMCliente;
    public static javax.swing.JTextField jtxtApellidoPCliente;
    public static javax.swing.JTextField jtxtCelularCliente;
    private javax.swing.JTextArea jtxtDescripcion;
    private javax.swing.JTextField jtxtDireccion;
    private javax.swing.JTextField jtxtDireccion1;
    private javax.swing.JTextField jtxtDistrito;
    private javax.swing.JTextField jtxtDistrito2;
    public static javax.swing.JTextField jtxtDniCliente;
    public static javax.swing.JTextField jtxtNombreCliente;
    public static javax.swing.JTextField jtxtidCliente;
    // End of variables declaration//GEN-END:variables

    private void limpiarJTable() {

    }

    private void llenaComboDepartamento() {
        String nombre;
        //se limpia el combo
        jcmbDepartamento.removeAllItems();//limpia el combobox
        //try por si fallara al momento de rellenar
        try {
            //Se recorre con un for la lista de departamentos
            for (int i = 0; i < departamento.length; i++) {
                /**
                 * Se le da el valor sacado desde el Array departamento a la
                 * variable nombre, la cual recibe la variable nombre almacenada
                 * en el array y se rellena el combobox
                 */
                nombre = departamento[i];
                //Se arega un nuevo ítem al combobox
                jcmbDepartamento.addItem(nombre);
            }
        } catch (Exception e) { //capta el error y lo muestra
            JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
        }
    }

    private void llenaComboDepartamento1() {
        String nombre;
        //se limpia el combo
        jcmbDepartamento1.removeAllItems();//limpia el combobox
        //try por si fallara al momento de rellenar
        try {
            //Se recorre con un for la lista de departamentos
            for (int i = 0; i < departamento.length; i++) {
                /**
                 * Se le da el valor sacado desde el Array departamento a la
                 * variable nombre, la cual recibe la variable nombre almacenada
                 * en el array y se rellena el combobox
                 */
                nombre = departamento[i];
                //Se arega un nuevo ítem al combobox
                jcmbDepartamento1.addItem(nombre);
            }
        } catch (Exception e) { //capta el error y lo muestra
            JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
        }
    }

    private void llenaComboAmazonas(int dpt) {
        String nombre;
        if (dpt == 1) {
            jcmbProvincia.removeAllItems();
            try {
                for (int i = 0; i < amazonas.length; i++) {
                    nombre = amazonas[i];
                    jcmbProvincia.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        } else if (dpt == 2) {
            jcmbProvincia1.removeAllItems();
            try {
                for (int i = 0; i < amazonas.length; i++) {
                    nombre = amazonas[i];
                    jcmbProvincia1.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        }
    }

    private void llenaComboAncash(int dpt) {
        String nombre;
        if (dpt == 1) {
            jcmbProvincia.removeAllItems();
            try {
                for (int i = 0; i < ancash.length; i++) {
                    nombre = ancash[i];
                    jcmbProvincia.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        } else if (dpt == 2) {
            jcmbProvincia1.removeAllItems();
            try {
                for (int i = 0; i < ancash.length; i++) {
                    nombre = ancash[i];
                    jcmbProvincia1.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        }
    }

    private void llenaComboApurimac(int dpt) {
        String nombre;
        if (dpt == 1) {
            jcmbProvincia.removeAllItems();
            try {
                for (int i = 0; i < apurimac.length; i++) {
                    nombre = apurimac[i];
                    jcmbProvincia.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        } else if (dpt == 2) {
            jcmbProvincia1.removeAllItems();
            try {
                for (int i = 0; i < apurimac.length; i++) {
                    nombre = apurimac[i];
                    jcmbProvincia1.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        }
    }

    private void llenaComboArequipa(int dpt) {
        String nombre;
        if (dpt == 1) {
            jcmbProvincia.removeAllItems();
            try {
                for (int i = 0; i < arequipa.length; i++) {
                    nombre = arequipa[i];
                    jcmbProvincia.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        } else if (dpt == 2) {
            jcmbProvincia1.removeAllItems();
            try {
                for (int i = 0; i < arequipa.length; i++) {
                    nombre = arequipa[i];
                    jcmbProvincia1.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        }
    }
    
    private void llenaComboAyacucho(int dpt) {
        String nombre;
        if (dpt == 1) {
            jcmbProvincia.removeAllItems();
            try {
                for (int i = 0; i < ayacucho.length; i++) {
                    nombre = ayacucho[i];
                    jcmbProvincia.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        } else if (dpt == 2) {
            jcmbProvincia1.removeAllItems();
            try {
                for (int i = 0; i < ayacucho.length; i++) {
                    nombre = ayacucho[i];
                    jcmbProvincia1.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        }
    }
    
    private void llenaComboCajamarca(int dpt) {
        String nombre;
        if (dpt == 1) {
            jcmbProvincia.removeAllItems();
            try {
                for (int i = 0; i < cajamarca.length; i++) {
                    nombre = cajamarca[i];
                    jcmbProvincia.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        } else if (dpt == 2) {
            jcmbProvincia1.removeAllItems();
            try {
                for (int i = 0; i < cajamarca.length; i++) {
                    nombre = cajamarca[i];
                    jcmbProvincia1.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        }
    }
    
    private void llenaComboCallao(int dpt) {
        String nombre;
        if (dpt == 1) {
            jcmbProvincia.removeAllItems();
            try {
                for (int i = 0; i < callao.length; i++) {
                    nombre = callao[i];
                    jcmbProvincia.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        } else if (dpt == 2) {
            jcmbProvincia1.removeAllItems();
            try {
                for (int i = 0; i < callao.length; i++) {
                    nombre = callao[i];
                    jcmbProvincia1.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        }
    }
    
    private void llenaComboCusco(int dpt) {
        String nombre;
        if (dpt == 1) {
            jcmbProvincia.removeAllItems();
            try {
                for (int i = 0; i < cusco.length; i++) {
                    nombre = cusco[i];
                    jcmbProvincia.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        } else if (dpt == 2) {
            jcmbProvincia1.removeAllItems();
            try {
                for (int i = 0; i < cusco.length; i++) {
                    nombre = cusco[i];
                    jcmbProvincia1.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        }
    }
    
    private void llenaComboHuancavelica(int dpt) {
        String nombre;
        if (dpt == 1) {
            jcmbProvincia.removeAllItems();
            try {
                for (int i = 0; i < huancavelica.length; i++) {
                    nombre = huancavelica[i];
                    jcmbProvincia.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        } else if (dpt == 2) {
            jcmbProvincia1.removeAllItems();
            try {
                for (int i = 0; i < huancavelica.length; i++) {
                    nombre = huancavelica[i];
                    jcmbProvincia1.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        }
    }
    
    private void llenaComboHuanuco(int dpt) {
        String nombre;
        if (dpt == 1) {
            jcmbProvincia.removeAllItems();
            try {
                for (int i = 0; i < huanuco.length; i++) {
                    nombre = huanuco[i];
                    jcmbProvincia.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        } else if (dpt == 2) {
            jcmbProvincia1.removeAllItems();
            try {
                for (int i = 0; i < huanuco.length; i++) {
                    nombre = huanuco[i];
                    jcmbProvincia1.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        }
    }
    
    private void llenaComboIca(int dpt) {
        String nombre;
        if (dpt == 1) {
            jcmbProvincia.removeAllItems();
            try {
                for (int i = 0; i < ica.length; i++) {
                    nombre = ica[i];
                    jcmbProvincia.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        } else if (dpt == 2) {
            jcmbProvincia1.removeAllItems();
            try {
                for (int i = 0; i < ica.length; i++) {
                    nombre = ica[i];
                    jcmbProvincia1.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        }
    }
    
    private void llenaComboJunin(int dpt) {
        String nombre;
        if (dpt == 1) {
            jcmbProvincia.removeAllItems();
            try {
                for (int i = 0; i < junin.length; i++) {
                    nombre = junin[i];
                    jcmbProvincia.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        } else if (dpt == 2) {
            jcmbProvincia1.removeAllItems();
            try {
                for (int i = 0; i < junin.length; i++) {
                    nombre = junin[i];
                    jcmbProvincia1.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        }
    }
    
    private void llenaComboLaLibertad(int dpt) {
        String nombre;
        if (dpt == 1) {
            jcmbProvincia.removeAllItems();
            try {
                for (int i = 0; i < laLibertad.length; i++) {
                    nombre = laLibertad[i];
                    jcmbProvincia.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        } else if (dpt == 2) {
            jcmbProvincia1.removeAllItems();
            try {
                for (int i = 0; i < laLibertad.length; i++) {
                    nombre = laLibertad[i];
                    jcmbProvincia1.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        }
    }
    
    private void llenaComboLambayeque(int dpt) {
        String nombre;
        if (dpt == 1) {
            jcmbProvincia.removeAllItems();
            try {
                for (int i = 0; i < lambayeque.length; i++) {
                    nombre = lambayeque[i];
                    jcmbProvincia.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        } else if (dpt == 2) {
            jcmbProvincia1.removeAllItems();
            try {
                for (int i = 0; i < lambayeque.length; i++) {
                    nombre = lambayeque[i];
                    jcmbProvincia1.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        }
    }
    
    private void llenaComboLima(int dpt) {
        String nombre;
        if (dpt == 1) {
            jcmbProvincia.removeAllItems();
            try {
                for (int i = 0; i < lima.length; i++) {
                    nombre = lima[i];
                    jcmbProvincia.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        } else if (dpt == 2) {
            jcmbProvincia1.removeAllItems();
            try {
                for (int i = 0; i < lima.length; i++) {
                    nombre = lima[i];
                    jcmbProvincia1.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        }
    }
    
    private void llenaComboLoreto(int dpt) {
        String nombre;
        if (dpt == 1) {
            jcmbProvincia.removeAllItems();
            try {
                for (int i = 0; i < loreto.length; i++) {
                    nombre = loreto[i];
                    jcmbProvincia.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        } else if (dpt == 2) {
            jcmbProvincia1.removeAllItems();
            try {
                for (int i = 0; i < loreto.length; i++) {
                    nombre = loreto[i];
                    jcmbProvincia1.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        }
    }
    
    private void llenaComboMadreDeDios(int dpt) {
        String nombre;
        if (dpt == 1) {
            jcmbProvincia.removeAllItems();
            try {
                for (int i = 0; i < madreDeDios.length; i++) {
                    nombre = madreDeDios[i];
                    jcmbProvincia.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        } else if (dpt == 2) {
            jcmbProvincia1.removeAllItems();
            try {
                for (int i = 0; i < madreDeDios.length; i++) {
                    nombre = madreDeDios[i];
                    jcmbProvincia1.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        }
    }
    
    private void llenaComboMoquegua(int dpt) {
        String nombre;
        if (dpt == 1) {
            jcmbProvincia.removeAllItems();
            try {
                for (int i = 0; i < moquegua.length; i++) {
                    nombre = moquegua[i];
                    jcmbProvincia.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        } else if (dpt == 2) {
            jcmbProvincia1.removeAllItems();
            try {
                for (int i = 0; i < moquegua.length; i++) {
                    nombre = moquegua[i];
                    jcmbProvincia1.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        }
    }
    
    private void llenaComboPasco(int dpt) {
        String nombre;
        if (dpt == 1) {
            jcmbProvincia.removeAllItems();
            try {
                for (int i = 0; i < pasco.length; i++) {
                    nombre = pasco[i];
                    jcmbProvincia.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        } else if (dpt == 2) {
            jcmbProvincia1.removeAllItems();
            try {
                for (int i = 0; i < pasco.length; i++) {
                    nombre = pasco[i];
                    jcmbProvincia1.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        }
    }
    
    private void llenaComboPiura(int dpt) {
        String nombre;
        if (dpt == 1) {
            jcmbProvincia.removeAllItems();
            try {
                for (int i = 0; i < piura.length; i++) {
                    nombre = piura[i];
                    jcmbProvincia.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        } else if (dpt == 2) {
            jcmbProvincia1.removeAllItems();
            try {
                for (int i = 0; i < piura.length; i++) {
                    nombre = piura[i];
                    jcmbProvincia1.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        }
    }
    
    private void llenaComboPuno(int dpt) {
        String nombre;
        if (dpt == 1) {
            jcmbProvincia.removeAllItems();
            try {
                for (int i = 0; i < puno.length; i++) {
                    nombre = puno[i];
                    jcmbProvincia.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        } else if (dpt == 2) {
            jcmbProvincia1.removeAllItems();
            try {
                for (int i = 0; i < puno.length; i++) {
                    nombre = puno[i];
                    jcmbProvincia1.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        }
    }
    
    private void llenaComboSanMartin(int dpt) {
        String nombre;
        if (dpt == 1) {
            jcmbProvincia.removeAllItems();
            try {
                for (int i = 0; i < sanMartin.length; i++) {
                    nombre = sanMartin[i];
                    jcmbProvincia.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        } else if (dpt == 2) {
            jcmbProvincia1.removeAllItems();
            try {
                for (int i = 0; i < sanMartin.length; i++) {
                    nombre = sanMartin[i];
                    jcmbProvincia1.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        }
    }
    
    private void llenaComboTacna(int dpt) {
        String nombre;
        if (dpt == 1) {
            jcmbProvincia.removeAllItems();
            try {
                for (int i = 0; i < tacna.length; i++) {
                    nombre = tacna[i];
                    jcmbProvincia.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        } else if (dpt == 2) {
            jcmbProvincia1.removeAllItems();
            try {
                for (int i = 0; i < tacna.length; i++) {
                    nombre = tacna[i];
                    jcmbProvincia1.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        }
    }
    
    private void llenaComboTumbes(int dpt) {
        String nombre;
        if (dpt == 1) {
            jcmbProvincia.removeAllItems();
            try {
                for (int i = 0; i < tumbes.length; i++) {
                    nombre = tumbes[i];
                    jcmbProvincia.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        } else if (dpt == 2) {
            jcmbProvincia1.removeAllItems();
            try {
                for (int i = 0; i < tumbes.length; i++) {
                    nombre = tumbes[i];
                    jcmbProvincia1.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        }
    }
    
    private void llenaComboUcayali(int dpt) {
        String nombre;
        if (dpt == 1) {
            jcmbProvincia.removeAllItems();
            try {
                for (int i = 0; i < ucayali.length; i++) {
                    nombre = ucayali[i];
                    jcmbProvincia.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        } else if (dpt == 2) {
            jcmbProvincia1.removeAllItems();
            try {
                for (int i = 0; i < ucayali.length; i++) {
                    nombre = ucayali[i];
                    jcmbProvincia1.addItem(nombre);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
            }
        }
    }
}
